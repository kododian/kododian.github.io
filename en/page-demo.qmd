---
title: "Demo Site"
format: 
  html: 
    fig-format: svg
    math:
      mathjax: true
      include: 
        - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
      options:
        tex:
          packages: ["base", "mhchem"]
# required to render PNG/SVG properly when R code is there 
engine: jupyter 
nocite: |
  @*
output-dir: docs # required
---

```{python}
#| echo: false
from setup import add_lib_path
add_lib_path()

from lib_utils import db_df, db_table
from lib_gridplots import FlexibleGridPlot
%config InlineBackend.figure_format = 'svg'
```

## MathJax - mhchem

## R

```{r}
1+1
```

## Python

```{python}
#| label: fig-amino-acids
#| fig-cap: "Matrix"
#| fig-cap-location: margin
#| echo: false 

df = db_df("SELECT * FROM v_codons2_gc1_dst")
FlexibleGridPlot("data/grid1.yaml", df).draw()
```

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

```{python}
#| label: tab-amino-acids
#| echo: false
db_table(
  'SELECT name, symbol3, symbol1, nuclsum_b, nuclsum_s, nuclsum_t FROM amino_acids ORDER BY nuclsum_t', 
  headers=['Name', 'Short Name', 'Symbol', 'Block Sum', 'Side Chain Sum', 'Total Sum'])
```

::: {.callout-note collapse="true"}
## Expand for a list of Genetic Code variants

[Source](https://en.wikipedia.org/wiki/List_of_genetic_codes)

```{python}
#| label: tab-genetic-codes
#| echo: false
db_table("SELECT id, name FROM genetic_codes", ["Id", "Species"])
```
:::

```{python}
#| label: tab-codon-assignments
#| echo: false
#| tbl-cap: "Codon assignments for the Standard Code, contracted by the first two nucleotide bases."

db_table(
  "SELECT codon12, GROUP_CONCAT(symbol1, ', '), nuclsum_b, nuclsum_s, nuclsum_t FROM v_codons2_symbol1_gc1_dst GROUP BY codon12", 
  headers=["Codon", "Amino Acids", "Nucleon BL", "Nucleon SC", "Nucleon Total"])
```

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

## ASCII Table

|   | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D | E | F |
|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|
| 0 | ⌘ | ☺ | ☻ | [♥]{.bg-warning} | [♦]{.bg-warning} | ♣ | ♠ | • | ◘ | ○ | ◙ | ♂ | ♀ | ♪ | ♫ | ☼ |
| 1 | ► | ◄ | ↕ | !! | ¶ | § | ▬ | ↨ | ↑ | ↓ | → | ← | ∟ | ↔ | ▲ | ▼ |
| 2 |  | ! | " | \# | \$ | \% | & | ' | ( | ) | \* | \+ | , | \- | . | / |
| 3 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | : | ; | \< | = | \> | ? |
| 4 | \@ | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O |
| 5 | P | Q | R | S | T | U | V | W | X | Y | Z | \[ | \\ | \] | \^ | \_ |
| 6 | \` | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o |
| 7 | p | q | r | s | t | u | v | w | x | y | z | { | \| | } | \~ | ⌂ |
| 8 | Ç | ü | é | â | ä | à | å | ç | ê | ë | è | ï | î | ì | Ä | Å |
| 9 | É | æ | Æ | ô | ö | ò | û | ù | ÿ | Ö | Ü | ¢ | £ | ¥ | ₧ | ƒ |
| A | á | í | ó | ú | ñ | Ñ | ª | º | ¿ | ⌐ | ¬ | ½ | ¼ | ¡ | « | » |
| B | ░ | ▒ | ▓ | │ | ┤ | ╡ | ╢ | ╖ | ╕ | ╣ | ║ | ╗ | ╝ | ╜ | ╛ | ┐ |
| C | └ | ┴ | ┬ | ├ | ─ | ┼ | ╞ | ╟ | ╚ | ╔ | ╩ | ╦ | ╠ | ═ | ╬ | ╧ |
| D | ╨ | ╤ | ╥ | ╙ | ╘ | ╒ | ╓ | ╫ | ╪ | ┘ | ┌ | █ | ▄ | ▌ | ▐ | ▀ |
| E | α | ß | Γ | π | Σ | σ | µ | τ | Φ | Θ | Ω | δ | ∞ | φ | ε | ∩ |
| F | ≡ | ± | ≥ | ≤ | ⌠ | ⌡ | ÷ | ≈ | ° | ∙ | ⋅ | √ | ⁿ | ² | ■ | ↗ |


```{mermaid}
%%| label: fig-flowchart
%%| fig-cap: "A flowchart."
%%| fig-column: screen-right
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]
```

```{dot}
//| label: graph
//| fig-cap: "A full width figure."
graph G {
  layout=neato
  run -- intr;
  intr -- runbl;
  runbl -- run;
  run -- kernel;
  kernel -- zombie;
  kernel -- sleep;
  kernel -- runmem;
  sleep -- swap;
  swap -- runswap;
  runswap -- new;
  runswap -- runmem;
  new -- runmem;
  sleep -- runmem;
}
```

```{mermaid}
quadrantChart
    title Reach and engagement of campaigns
    x-axis Low Reach --> High Reach
    y-axis Low Engagement --> High Engagement
    quadrant-1 We should expand
    quadrant-2 Need to promote
    quadrant-3 Re-evaluate
    quadrant-4 May be improved
    Campaign A: [0.3, 0.6]
    Campaign B: [0.45, 0.23]
    Campaign C: [0.57, 0.69]
    Campaign D: [0.78, 0.34]
    Campaign E: [0.40, 0.34]
    Campaign F: [0.35, 0.78]
```

$$
\begin{bmatrix} 
G & A \\ 
C & T \\ 
\end{bmatrix}
\otimes
\begin{bmatrix} 
G & A \\ 
C & T \\ 
\end{bmatrix}
=
\begin{bmatrix} 
GG & GA & AG & AA \\ 
GC & GT & AC & AT \\ 
CG & CA & TG & TA \\ 
CC & CT & TC & TT 
\end{bmatrix}
$$

## 2D Molecule

```{python}
#| label: fig-amino-acids-diagram
#| echo: false
from rdkit import Chem
from rdkit.Chem import Draw, AllChem

df = db_df(
    "SELECT name, smiles FROM amino_acids WHERE smiles IS NOT NULL ORDER BY nuclsum_t"
)

# Template for alignment: Glycine (small and clean backbone)
template = Chem.MolFromSmiles("NCC(=O)O")
_ = AllChem.Compute2DCoords(template)

mols = []
legends = []
for _, row in df.iterrows():
  name = row["name"]
  smiles = row["smiles"]

  mol = Chem.MolFromSmiles(smiles)
  #mol = Chem.AddHs(mol_no_H)
  # Align molecule to template, suppress output
  _ = AllChem.Compute2DCoords(mol)
  _ = AllChem.GenerateDepictionMatching2DStructure(mol, template)
  mols.append(mol)

  legends.append(name)

opts = Draw.rdMolDraw2D.MolDrawOptions()
#opts.legendFraction = 0.25
#opts.legendFontSize = 24

# Draw grid with labels, SVG output
Draw.MolsToGridImage(
  mols,
  molsPerRow=4,
  subImgSize=(200, 200),
  legends=legends,
  useSVG=True,
  returnPNG=False,
  drawOptions=opts
)
```

[This is a span that has the class aside which places it in the margin without a footnote number.]{.aside}

As outlined by @crickDirectedPanspermia1973, pp. 16-18, we find this below. Also by referencing this, we end up there[^1], as outlined in @fig-flowchart. Also refer to @fig-amino-acids for more details.

[^1]: Here is the footnote.