{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Page 1\"\n",
        "format: html\n",
        "editor: visual\n",
        "html:\n",
        "  include-in-header: includes/head.html\n",
        "bibliography: refs/references.bib\n",
        "nocite: |\n",
        "  @*\n",
        "filters:\n",
        "  - interactive-sql\n",
        "databases:\n",
        "  - name: gc\n",
        "    path: \"./data/genetic_code.db\"\n",
        "    editable: false\n",
        "jupyter:\n",
        "  kernelspec:\n",
        "    display_name: itables\n",
        "    language: python\n",
        "    name: itables\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Quarto\n"
      ],
      "id": "fb4d4123"
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "asis"
      },
      "source": [
        "#| label: fig-amino-acids1\n",
        "#| fig-cap: Matrix\n",
        "#| fig-cap-location: margin\n",
        "#| echo: false\n",
        "\n",
        "from lib_gridplots import FlexibleGridPlot\n",
        "\n",
        "FlexibleGridPlot(\"data/grid1.yaml\").draw()"
      ],
      "id": "fig-amino-acids1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n"
      ],
      "id": "d1e8716a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| label: tbl-amino-acids\n",
        "#| tbl-cap: Amino acids with nucleon counts in backbone (block), side chain, and total, ordered by their weight.\n",
        "from lib_utils import db_table\n",
        "db_table(\"select name, symbol3 as 'short name', symbol1 as symbol, nuclsum_b as 'block sum', nuclsum_s as 'side chain sum', nuclsum_t as 'total sum' from amino_acids order by name\")"
      ],
      "id": "tbl-amino-acids",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Running Code\n",
        "\n",
        "When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{r}\n",
        "#| include: false\n",
        "1 + 1\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "You can add options to executable code like this\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{r}\n",
        "#| echo: false\n",
        "2 * 2 + 1\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "The `echo: false` option disables the printing of code (only output is displayed).\n"
      ],
      "id": "5b800847"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-margin\n",
        "#| fig-cap: MPG vs horsepower, colored\n",
        "#| column: margin\n",
        "import numpy as np\n",
        "\n",
        "x = np.pi/2\n",
        "print(x)"
      ],
      "id": "fig-margin",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "|   | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D | E | F |\n",
        "|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|\n",
        "| 0 | ⌘ | ☺ | ☻ | [♥]{.bg-yellow-300} | [♦]{.bg-yellow-300} | ♣ | ♠ | • | ◘ | ○ | ◙ | ♂ | ♀ | ♪ | ♫ | ☼ |\n",
        "| 1 | ► | ◄ | ↕ | !! | ¶ | § | ▬ | ↨ | ↑ | ↓ | → | ← | ∟ | ↔ | ▲ | ▼ |\n",
        "| 2 |  | ! | \" | \\# | \\$ | \\% | & | ' | ( | ) | \\* | \\+ | , | \\- | . | / |\n",
        "| 3 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | : | ; | \\< | = | \\> | ? |\n",
        "| 4 | \\@ | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O |\n",
        "| 5 | P | Q | R | S | T | U | V | W | X | Y | Z | \\[ | \\\\ | \\] | \\^ | \\_ |\n",
        "| 6 | \\` | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o |\n",
        "| 7 | p | q | r | s | t | u | v | w | x | y | z | { | \\| | } | \\~ | ⌂ |\n",
        "| 8 | Ç | ü | é | â | ä | à | å | ç | ê | ë | è | ï | î | ì | Ä | Å |\n",
        "| 9 | É | æ | Æ | ô | ö | ò | û | ù | ÿ | Ö | Ü | ¢ | £ | ¥ | ₧ | ƒ |\n",
        "| A | á | í | ó | ú | ñ | Ñ | ª | º | ¿ | ⌐ | ¬ | ½ | ¼ | ¡ | « | » |\n",
        "| B | ░ | ▒ | ▓ | │ | ┤ | ╡ | ╢ | ╖ | ╕ | ╣ | ║ | ╗ | ╝ | ╜ | ╛ | ┐ |\n",
        "| C | └ | ┴ | ┬ | ├ | ─ | ┼ | ╞ | ╟ | ╚ | ╔ | ╩ | ╦ | ╠ | ═ | ╬ | ╧ |\n",
        "| D | ╨ | ╤ | ╥ | ╙ | ╘ | ╒ | ╓ | ╫ | ╪ | ┘ | ┌ | █ | ▄ | ▌ | ▐ | ▀ |\n",
        "| E | α | ß | Γ | π | Σ | σ | µ | τ | Φ | Θ | Ω | δ | ∞ | φ | ε | ∩ |\n",
        "| F | ≡ | ± | ≥ | ≤ | ⌠ | ⌡ | ÷ | ≈ | ° | ∙ | ⋅ | √ | ⁿ | ² | ■ | ↗ |\n",
        "\n",
        ": Demonstration of pipe table syntax\n",
        "\n",
        "hello there\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{mermaid}\n",
        "%%| label: fig-flowchart\n",
        "%%| fig-cap: \"A flowchart.\"\n",
        "%%| fig-column: screen-right\n",
        "flowchart LR\n",
        "  A[Hard edge] --> B(Round edge)\n",
        "  B --> C{Decision}\n",
        "  C --> D[Result one]\n",
        "  C --> E[Result two]\n",
        "```\n",
        "\n",
        "```{dot}\n",
        "//| label: fig-fullwidth\n",
        "//| fig-cap: \"A full width figure.\"\n",
        "graph G {\n",
        "  layout=neato\n",
        "  run -- intr;\n",
        "  intr -- runbl;\n",
        "  runbl -- run;\n",
        "  run -- kernel;\n",
        "  kernel -- zombie;\n",
        "  kernel -- sleep;\n",
        "  kernel -- runmem;\n",
        "  sleep -- swap;\n",
        "  swap -- runswap;\n",
        "  runswap -- new;\n",
        "  runswap -- runmem;\n",
        "  new -- runmem;\n",
        "  sleep -- runmem;\n",
        "}\n",
        "```\n",
        "\n",
        "```{mermaid}\n",
        "quadrantChart\n",
        "    title Reach and engagement of campaigns\n",
        "    x-axis Low Reach --> High Reach\n",
        "    y-axis Low Engagement --> High Engagement\n",
        "    quadrant-1 We should expand\n",
        "    quadrant-2 Need to promote\n",
        "    quadrant-3 Re-evaluate\n",
        "    quadrant-4 May be improved\n",
        "    Campaign A: [0.3, 0.6]\n",
        "    Campaign B: [0.45, 0.23]\n",
        "    Campaign C: [0.57, 0.69]\n",
        "    Campaign D: [0.78, 0.34]\n",
        "    Campaign E: [0.40, 0.34]\n",
        "    Campaign F: [0.35, 0.78]\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "$$\n",
        "\\begin{bmatrix} \n",
        "G & A \\\\ \n",
        "C & T \\\\ \n",
        "\\end{bmatrix}\n",
        "\\otimes\n",
        "\\begin{bmatrix} \n",
        "G & A \\\\ \n",
        "C & T \\\\ \n",
        "\\end{bmatrix}\n",
        "=\n",
        "\\begin{bmatrix} \n",
        "GG & GA & AG & AA \\\\ \n",
        "GC & GT & AC & AT \\\\ \n",
        "CG & CA & TG & TA \\\\ \n",
        "CC & CT & TC & TT \n",
        "\\end{bmatrix}\n",
        "$$\n",
        "\n",
        "[This is a span that has the class aside which places it in the margin without a footnote number.]{.aside}\n",
        "\n",
        "As outlined by @crickDirectedPanspermia1973, pp. 16-18, we find this below. Also by referencing this, we end up there[^1], as outlined in @fig-flowchart. Also refer to @fig-amino-acids for more details.\n",
        "\n",
        "[^1]: Here is the footnote.\n",
        "\n",
        "### References\n",
        "\n",
        "::: {#refs}\n",
        ":::\n",
        "\n",
        "### Supplementary Material\n",
        "\n",
        "-   list 1\n",
        "-   list 2"
      ],
      "id": "2144a0a7"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "itables",
      "language": "python",
      "name": "itables"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}